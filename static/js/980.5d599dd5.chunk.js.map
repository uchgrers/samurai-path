{"version":3,"file":"static/js/980.5d599dd5.chunk.js","mappings":"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","sources":["webpack://samurai-path-v2/./src/Components/Users/User/User.module.css?19b8","Components/Users/User/User.jsx","webpack://samurai-path-v2/./src/Common/Paginator/Paginator.module.css?9c1b","Common/Paginator/Paginator.jsx","Components/Users/Users.jsx","redux/Selectors/usersSelector.js","Components/Users/UsersContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"User_item__MUEkW\",\"user\":\"User_user__XkNJJ\",\"avatar\":\"User_avatar__ob6sa\"};","import React from 'react';\r\nimport classes from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n\r\n    const followUser = () => {\r\n        props.changeFollowStatus(props.id, props.followed)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.item}>\r\n            <div className={classes.user}>\r\n                <NavLink to={`/profile/${props.id}`}>\r\n                    <img src={props.photo || 'https://cdn-icons-png.flaticon.com/512/149/149071.png'}\r\n                         alt=\"Avatar\"\r\n                         className={classes.avatar}/>\r\n                </NavLink>\r\n                <div>{props.firstName}</div>\r\n                <button onClick={followUser}\r\n                        disabled={props.inFollowingProgress.some(el => el === props.id)}>\r\n                    {props.followed ? 'Unfollow' : 'Follow'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","// extracted by mini-css-extract-plugin\nexport default {\"currentPage\":\"Paginator_currentPage__T-0sm\",\"page\":\"Paginator_page__xiXZZ\"};","import React, {useMemo, useState} from 'react';\r\nimport classes from \"./Paginator.module.css\";\r\n\r\nconst Paginator = (props) => {\r\n    const portionSize = 10\r\n\r\n    const pagesCount = Math.ceil(props.itemsTotalCount / props.pageSize);\r\n    const pages = [];\r\n    const portionCount = Math.ceil(pagesCount / portionSize);\r\n    const [portionNumber, setPortionNumber] = useState(Math.ceil(props.currentPage / 10));\r\n    const leftBorder = (portionNumber - 1) * portionSize + 1;\r\n    const rightBorder = portionNumber * portionSize;\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    const onPageChange = (page) => {\r\n        props.onPageChange(props.pageSize, page)\r\n    }\r\n    console.log(portionCount)\r\n    console.log(portionNumber)\r\n    console.log(leftBorder)\r\n    console.log(rightBorder)\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Prev</button>}\r\n            {useMemo(() => pages\r\n                .map(p => p)\r\n                .filter(page => {\r\n                    return page >= leftBorder && page <= rightBorder;\r\n                })\r\n                .map(page => {\r\n                return (\r\n                    <span onClick={() => {onPageChange(page)}}\r\n                             className={(props.currentPage === page && classes.currentPage)\r\n                                 || classes.page}\r\n                             key={page + ' page key'}>\r\n                    {page}\r\n                    </span>)\r\n            }), [leftBorder])}\r\n            {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\r\n        </div>\r\n    );\r\n};\r\nexport default Paginator;","import React, {useEffect} from 'react';\r\nimport User from \"./User/User\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport Paginator from \"../../Common/Paginator/Paginator\";\r\n\r\nconst Users = (props) => {\r\n\r\n        useEffect(() => {\r\n            if (props.users.length === 0) {\r\n                props.getUsers(props.pageSize, props.currentPage)\r\n            }\r\n        }, [props.currentPage])\r\n\r\n        const users = props.users\r\n            .map(user => <User id={user.id}\r\n                               firstName={user.name}\r\n                               followed={user.followed}\r\n                               status={user.status}\r\n                               photo={user.photos.small}\r\n                               followUser={props.followUnfollowUser}\r\n                               toggleFollowingProgress={props.toggleFollowingProgress}\r\n                               inFollowingProgress={props.inFollowingProgress}\r\n                               changeFollowStatus={props.changeFollowStatus}\r\n                               key={user.id + ' user key'}\r\n            />)\r\n\r\n        return (\r\n            <div>\r\n                {props.isFetching ? <Preloader/> :\r\n                    <div>\r\n                        <Paginator currentPage={props.currentPage} onPageChange={props.getUsers}\r\n                                   itemsTotalCount={props.usersTotalCount} pageSize={props.pageSize}\r\n                        />\r\n                        {users}\r\n                    </div>}\r\n            </div>);\r\n    }\r\n;\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const selectUsers = createSelector([getUsersSelector], (users => users))\r\n\r\nexport const getUsersTotalCountSelector = (state) => {\r\n    return state.usersPage.usersTotalCount;\r\n}\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getPageSelector = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const isFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const inFollowingProgressSelector = (state) => {\r\n    return state.usersPage.inFollowingProgress;\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    changeFollowStatus,\r\n    followUnfollowUser, getUsers,\r\n    setCurrentPage,\r\n    setUsers,\r\n    setUsersTotalCount, toggleFollowingProgress,\r\n    toggleIsFetching,\r\n} from \"../../redux/usersPageReducer\";\r\nimport {\r\n    getPageSelector,\r\n    getPageSizeSelector, getUsersSelector,\r\n    getUsersTotalCountSelector, inFollowingProgressSelector, isFetchingSelector, selectUsers\r\n} from \"../../redux/Selectors/usersSelector\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        usersTotalCount: getUsersTotalCountSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        currentPage: getPageSelector(state),\r\n        isFetching: isFetchingSelector(state),\r\n        inFollowingProgress: inFollowingProgressSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    followUnfollowUser,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setUsersTotalCount,\r\n    toggleIsFetching,\r\n    toggleFollowingProgress,\r\n    getUsers,\r\n    changeFollowStatus\r\n})(Users)\r\n"],"names":["props","_jsx","className","classes","children","_jsxs","NavLink","to","concat","id","src","photo","alt","firstName","onClick","followUser","changeFollowStatus","followed","disabled","inFollowingProgress","some","el","pagesCount","Math","ceil","itemsTotalCount","pageSize","pages","portionCount","portionNumber","setPortionNumber","useState","currentPage","leftBorder","rightBorder","i","push","console","log","useMemo","map","p","filter","page","onPageChange","useEffect","users","length","getUsers","user","User","name","status","photos","small","followUnfollowUser","toggleFollowingProgress","isFetching","Preloader","Paginator","usersTotalCount","getUsersSelector","state","usersPage","getUsersTotalCountSelector","createSelector","getPageSizeSelector","getPageSelector","isFetchingSelector","inFollowingProgressSelector","connect","setUsers","setCurrentPage","setUsersTotalCount","toggleIsFetching","Users"],"sourceRoot":""}